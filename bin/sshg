#!/bin/bash
args=("$@")
arg_cnt=0

for arg in "${args[@]}"; do
  if [[ "$arg" =~ @ ]]; then
    REMOTEUSER_AT_REMOTEHOST="$arg"
    unset "args[$arg_cnt]"
  fi
  (( arg_cnt++ ))
done
exit

#REMOTEUSER_AT_REMOTEHOST="${*:-1}"
REMOTEHOST="${REMOTEUSER_AT_REMOTEHOST##*@}"
REMOTEUSER="${REMOTEUSER_AT_REMOTEHOST%%@*}"
CONTROLPATH="${HOME}/.ssh/master-%r@%h:%p"

# SSH command to use, ignore conifg
TERM=xterm-256color
SSH="ssh -F /dev/null -o ControlMaster=auto -o ControlPath=$CONTROLPATH -o ControlPersist=45"

# check to see if a ControlMaster exists
if ssh -q -O check "$REMOTEHOST" > /dev/null 2>&1; then
  ssh -q -O exit "$REMOTEHOST"
fi

if ssh -q -O check "$REMOTEUSER_AT_REMOTEHOST" > /dev/null 2>&1; then
  ssh -q -O exit "$REMOTEUSER_AT_REMOTEHOST"
fi

echo "Connecting to $REMOTEHOST as $REMOTEUSER"

if $SSH -A -N -f "$REMOTEUSER_AT_REMOTEHOST"; then
  # Figure out local and remote GPG socket paths
  LOCAL_GPG_SOCKET="$(gpgconf --list-dir agent-socket)"
  REMOTE_GPG_SOCKET="$($SSH "$REMOTEUSER_AT_REMOTEHOST" gpgconf --list-dir agent-socket)"
  REMOTE_GPG_SOCKET_DIR="$($SSH "$REMOTEUSER_AT_REMOTEHOST" gpgconf --list-dir socketdir)"

  # kill all gpg-agent instances
  $SSH "$REMOTEUSER_AT_REMOTEHOST" gpgconf --kill gpg-agent

  # make required directories for gpg forwarding
  $SSH "$REMOTEUSER_AT_REMOTEHOST" gpgconf --create-socketdir
  # make sure no agent socket is left
  $SSH "$REMOTEUSER_AT_REMOTEHOST"  rm -f "$REMOTE_GPG_SOCKET_DIR/S.gpg*"

  # forward gpg socket
  if [[ -e "$LOCAL_GPG_SOCKET" ]]; then
    $SSH -T -o ExitOnForwardFailure=yes -R $REMOTE_GPG_SOCKET:$LOCAL_GPG_SOCKET -O forward "$REMOTEUSER_AT_REMOTEHOST"
  else
    echo "Error: no extra gpg extra socket."
  fi

  # finally connect to host
  $SSH -A "${args[@]}" "$REMOTEUSER_AT_REMOTEHOST"
fi
