#!/bin/bash

# Set script name and full path early.
SSH="$(command -v ssh)"
SSH_FWD_SH=$(basename "$0")
oneline_usage="$SSH_FWD_SH socket [user@]hostname"
usage()
{
  cat <<-EndUsage
		Usage: $oneline_usage
		Try '$SSH_FWD_SH -h' for more information.
	EndUsage
  exit 1
}

_fwd_gpg() {
  HOST="$1"
  # Figure out local and remote GPG socket paths
  LOCAL_GPG_SOCKET="$(gpgconf --list-dir agent-socket)"
  REMOTE_GPG_SOCKET="$($SSH "$HOST" gpgconf --list-dir agent-socket)"
  REMOTE_GPG_SOCKET_DIR="$($SSH "$HOST" gpgconf --list-dir socketdir)"

  # kill all gpg-agent instances
  $SSH "$HOST" gpgconf --kill gpg-agent

  # make required directories for gpg forwarding
  $SSH "$HOST" gpgconf --create-socketdir
  # make sure no agent socket is left
  $SSH "$HOST"  rm -f $REMOTE_GPG_SOCKET_DIR/S.gpg*

  # forward gpg socket
  if [[ -e "$LOCAL_GPG_SOCKET" ]]; then
    $SSH -T -o ExitOnForwardFailure=yes -R $REMOTE_GPG_SOCKET:$LOCAL_GPG_SOCKET -O forward "$HOST"
  else
    echo "Error: no extra gpg extra socket."
  fi

}

if [[ "$#" -ne 2 ]]; then
  echo "Illegal number of parameters"
  usage
  exit 1
fi

if ssh -q -O check "$REMOTEUSER_AT_REMOTEHOST" > /dev/null 2>&1; then
  echo "Connect to Host via SSH first."
  exit 1
fi


action=$1; shift
case "$action" in
  gpg)
    _fwd_gpg "$1"
    ;;
  *)
    usage
    exit 1
    ;;
esac
