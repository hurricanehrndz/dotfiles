#
# A simple theme that displays relevant, contextual information.
#
# Authors:
#   Carlos Hernandez <carlos@techbyte.ca>
#   based on Sorin Ionescu theme
#

#
# 16 Terminal Colors
# -- ---------------
#  0 black
#  1 red
#  2 green
#  3 yellow
#  4 blue
#  5 magenta
#  6 cyan
#  7 white
#  8 bright black
#  9 bright red
# 10 bright green
# 11 bright yellow
# 12 bright blue
# 13 bright magenta
# 14 bright cyan
# 15 bright white
#

# Load dependencies.
pmodload 'helper'
newline=$'\n'

if [ -n "$TMUX" ]; then
  function refresh {
    sshauth=$(tmux show-environment | grep "^SSH_AUTH_SOCK")
    if [ $sshauth ]; then
        export $sshauth
    fi
    display=$(tmux show-environment | grep "^DISPLAY")
    if [ $display ]; then
        export $display
    fi
  }
else
  function refresh { }
fi

function preexec {
    # Refresh environment if inside tmux
    refresh
}

# call back function from async process
# parmeter $3 is stdout of async process
function prompt_hurricanehrndz_git_info {
  # git information from async function
  _git_info="$3"

  if [[ -z "$_git_info" ]]; then
    # No git target detected, flush the git fragment and redisplay the prompt.
    if [[ -n "$_preprompt_hurricanehrndz_git" ]]; then
    # No git info detected
      preprompt_hurricanehrndz_render " "
      preprompt_hurricanehrndz_render "$_preprompt_hurricanehrndz_git"
      zle && zle reset-prompt
    fi
  else
    # Git target detected, update the git fragment and redisplay the prompt.
    _preprompt_hurricanehrndz_git="${_git_info}"
    preprompt_hurricanehrndz_render "$_preprompt_hurricanehrndz_git"
    zle && zle reset-prompt
  fi
}

function prompt_hurricanehrndz_async_git {
  cd -q "$1"
  # Get Git repository information.
  if (( $+functions[git-info] )); then
    git-info
    # print
    print  ${git_info[status]:+"%F{7} on %f${git_info[status]}${git_info[indicator]:+" %F{4}\[%f${git_info[indicator]}%F{4}\]%f"}"}
  fi
}


function prompt_hurricanehrndz_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # Format PWD.
  _prompt_hurricanehrndz_pwd=$(prompt-pwd)
  prompt_hurricanehrndz_set_title ${_prompt_hurricanehrndz_pwd}

  # Kill the old process of slow commands if it is still running.
  #                | worker name
  async_flush_jobs async_hurricanehrndz_git

  # Ensure git checks are carried in working directory
  cd "$PWD"
  # Handle updating git data. We also clear the git prompt data if we're in a
  # different git root now.
  if (( $+functions[git-dir] )); then
    local new_git_root="$(git-dir 2> /dev/null)"
    if [[ $new_git_root != $_hurricanehrndz_cur_git_root ]]; then
      _preprompt_hurricanehrndz_git=''
      _hurricanehrndz_cur_git_root=$new_git_root
    fi
  fi

  # python info
  if (( $+functions[python-info] )); then
    python-info
  fi

  # render preprompt
  preprompt_hurricanehrndz_render "precmd"

  # Compute slow commands in the background.
  async_job async_hurricanehrndz_git prompt_hurricanehrndz_async_git "$PWD"
}

function preprompt_hurricanehrndz_render {
  # https://en.wikipedia.org/wiki/ANSI_escape_code#Escape_sequences
  # move cursor up, clear entire line, move cursor back to start
  clr_prev_preprompt='\e[1A\e[2K\e[${COLUMNS}D'
  preprompt='$python_info[virtualenv]%B%F{1}%n%f%b%F{7} at %f%F{3}%m%f%F{7} in %f%F{2}${_prompt_hurricanehrndz_pwd}%f'
  if [[ "$1" == "precmd" ]]; then
    print -P "${newline}${preprompt}"
  else
    # modify previous preprompt
    print -Pn "${clr_prev_preprompt}${preprompt}${1}${newline}"
  fi
}

prompt_hurricanehrndz_set_title() {
  # tell the terminal we are setting the title
  print -n '\e]0;'
  # show hostname if connected through ssh
  [[ -n $SSH_CONNECTION ]] && print -Pn '(%m) '
  print -rn $1
  # end set title
  print -n '\a'
}

function prompt_hurricanehrndz_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  # Load required functions.
  autoload -Uz add-zsh-hook
  autoload -Uz async && async

  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_hurricanehrndz_precmd

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '%B%F{7}...%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary' format '%F{red}❯%(?;%{%F{blue}%};%{%F{red}%})❯%(?;%{%F{cyan}%};%{%F{red}%})❯%f'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format '%F{3}%f'
  zstyle ':prezto:module:editor:info:keymap:alternate' format '%F{cyan}❮%F{blue}❮%F{red}❮%f'

  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:action' format '%F{7}:%f%F{9}%s%f'
  zstyle ':prezto:module:git:info:added' format '%F{2} %f'
  zstyle ':prezto:module:git:info:ahead' format '%B%F{5} %f%b'
  zstyle ':prezto:module:git:info:behind' format '%B%F{5} %f%b'
  zstyle ':prezto:module:git:info:branch' format '%%B%F{5}%b%f%%b'
  zstyle ':prezto:module:git:info:commit' format '%%B%F{5}%.7c%f%%b'
  zstyle ':prezto:module:git:info:deleted' format '%F{1} %f'
  zstyle ':prezto:module:git:info:modified' format '%F{4} %f'
  zstyle ':prezto:module:git:info:position' format '%%B%F{5}%p%f%%b'
  zstyle ':prezto:module:git:info:renamed' format '%F{5} %f'
  zstyle ':prezto:module:git:info:stashed' format '%F{6} %f'
  zstyle ':prezto:module:git:info:unmerged' format '%F{3} %f'
  zstyle ':prezto:module:git:info:untracked' format '%F{7} %f'
  # https://github.com/sorin-ionescu/prezto/blob/master/modules/git/functions/git-info
  zstyle ':prezto:module:git:info:keys' format \
    'status' '$(coalesce "%b" "%p" "%c")%s' \
    'indicator' '%A%B%S%a%d%m%r%U%u'

  # Set python-info parameters.
  zstyle ':prezto:module:python:info:virtualenv' format '(%v) '

  # Get the async worker set up
  async_start_worker async_hurricanehrndz_git -n
  # Register the call back function for the worker
  async_register_callback async_hurricanehrndz_git prompt_hurricanehrndz_git_info
  _hurricanehrndz_cur_git_root=''

  _prompt_hurricanehrndz_git=''
  _prompt_hurricanehrndz_pwd=''

  # Define prompts.
  PROMPT='${editor_info[keymap]} '
  RPROMPT='${editor_info[overwrite]}%(?:: %F{1}✘%f)${VIM:+" %B%F{6}V%f%b"}'
  SPROMPT='zsh: correct %F{1}%R%f to %F{2}%r%f [nyae]? '
}

function prompt_hurricanehrndz_preview {
  local +h PROMPT=''
  local +h RPROMPT=''
  local +h SPROMPT=''

  editor-info 2>/dev/null
  prompt_preview_theme 'hurricanehrndz'
}

prompt_hurricanehrndz_setup "$@"
